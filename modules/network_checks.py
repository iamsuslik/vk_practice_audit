import ntplib
import smtplib
import logging
import yaml
from datetime import datetime
from modules.telegram_alerts import send_alert

try:
    with open("./config.yaml", "r") as f:
        config = yaml.safe_load(f)
except Exception as e:
    logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ config.yaml: {str(e)}")
    config = {
        "ntp_server": "pool.ntp.org",
        "smtp_server": "smtp.gmail.com",
        "smtp_port": 587
    }


def check_network():
    results = {"ntp": False, "smtp": False}

    try:
        client = ntplib.NTPClient()
        response = client.request(config["ntp_server"], timeout=5)
        time_diff = abs(response.offset)
        results["ntp"] = time_diff < 5
        logging.info(f"NTP –ø—Ä–æ–≤–µ—Ä–∫–∞: —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ {time_diff:.2f} —Å–µ–∫")
    except Exception as e:
        logging.error(f"NTP –æ—à–∏–±–∫–∞: {str(e)}")
        send_alert(f"‚è∞ NTP –æ—à–∏–±–∫–∞: {str(e)}")

    try:
        with smtplib.SMTP(config["smtp_server"], config["smtp_port"], timeout=5) as server:
            server.starttls()
            server.ehlo()
            results["smtp"] = True
            logging.info("SMTP –ø—Ä–æ–≤–µ—Ä–∫–∞: —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        logging.error(f"SMTP –æ—à–∏–±–∫–∞: {str(e)}")
        send_alert(f"üìß SMTP –æ—à–∏–±–∫–∞: {str(e)}")

    return results